Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.


Example 2:

Input: s = "AABABBA", k = 1
Output: 4
Explanation: Replace the one 'A' in the middle with 'B' and form "AABBBBA".
The substring "BBBB" has the longest repeating letters, which is 4.
There may exists other ways to achieve this answer too.


class Solution {
    public int characterReplacement(String s, int k) {
        int[] count = new int[26];
        int freq = 0;
        int left = 0; 
        int maxVal = 0;

        for (int right = 0; right < s.length(); right++) {
            char c = s.charAt(right);
            count[c - 'A']++;

            freq = Math.max(freq, count[c - 'A']);

            // If window is invalid, shrink it
            while ((right - left + 1) - freq > k) {
                count[s.charAt(left) - 'A']--;
                left++;
            }

            maxVal = Math.max(maxVal, right - left + 1);
        }
        return maxVal;
    }
}
